name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_AI: elsie-ai-agent
        ECR_REPOSITORY_BOT: elsie-discord-bot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build and push AI Agent
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_AI:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_AI:latest ./ai_agent
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_AI:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_AI:latest

        # Build and push Discord Bot
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_BOT:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_BOT:latest ./discord_bot
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_BOT:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_BOT:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/elsie
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          docker-compose pull
          docker-compose up -d 